plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

def getEnvValue(String key) {
    def file = rootProject.file("C:/Users/realsound/Desktop/turing/assets/config/.env")
    def properties = new Properties()
    if (file.exists()) {
        file.withInputStream { stream -> properties.load(stream) }
        return properties.getProperty(key)
    } else {
        throw new FileNotFoundException("Environment file not found: ${file.path}");
    }
}

android {
    namespace = "com.turing.gotchai"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = flutter.ndkVersion
 
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }
 
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17
    }

    signingConfigs {
        release {
            def properties = new Properties()
            properties.load(new FileInputStream(file("keystore.properties")))

            storeFile file(properties["key.store.file"])
            storePassword properties["key.store.password"]
            keyAlias properties["key.alias.name"]
            keyPassword properties["key.alias.password"]
        }
    }
 
    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId = "com.turing.gotchai"
        // You can update the following values to match your application needs.
        // For more information, see: https://flutter.dev/to/review-gradle-config.
        minSdk = 26
        targetSdk = flutter.targetSdkVersion
        versionCode = flutter.versionCode
        versionName = flutter.versionName

        manifestPlaceholders = [
            KAKAO_NATIVE_KEY: getEnvValue("KAKAO_NATIVE_KEY"),
        ]
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig = signingConfigs.release
        }
    }
}
 
flutter {
    source = "../.."
}
